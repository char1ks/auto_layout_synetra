–ü–æ–Ω—è–ª, –ø–æ—á–µ–º—É —É —Ç–µ–±—è ¬´–ø–∞–¥–∞–µ—Ç¬ª pos –∏ ¬´–≤–∑–ª–µ—Ç–∞–µ—Ç¬ª neg –≤–ø–ª–æ—Ç—å –¥–æ —Ç–æ–≥–æ, —á—Ç–æ —Å–∞–º–∞ –º–∞—Å–∫–∞ –∏–∑ –ø–æ–∑–∏—Ç–∏–≤–æ–≤ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –Ω–µ–≥–∞—Ç–∏–≤:

–ö–æ—Ä–Ω–µ–≤–∞—è –ø—Ä–∏—á–∏–Ω–∞ (–ø–æ —Ç–≤–æ–∏–º —Ñ–∞–π–ª–∞–º)

DINOv3: –ü–æ–∑–∏—Ç–∏–≤—ã/–Ω–µ–≥–∞—Ç–∏–≤—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –ø—Ä–∏–∑–Ω–∞–∫–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, —á–µ–º –º–∞—Å–∫–∏.
–í embeddings.py —Ñ—É–Ω–∫—Ü–∏—è _get_dinov3_global (—Å—Ç—Ä–æ–∫–∞ ~866) –±–µ—Ä—ë—Ç pooled –≤–µ–∫—Ç–æ—Ä —á–µ—Ä–µ–∑ self._dinov3_model(x), –∞ –º–∞—Å–∫–∏ –≤ _extract_with_dinov3_convnext() –±–µ—Ä—É—Ç—Å—è –∏–∑ forward_features —Å —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ–º –ø–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É (–∫–∞—Ä—Ç–∞ —Ñ–∏—á). –≠—Ç–æ —Ä–∞–∑–Ω—ã–µ —Å–ª–æ–∏ ‚Üí –∫–æ—Å–∏–Ω—É—Å—ã –º–µ–∂–¥—É –º–∞—Å–∫–æ–π –∏ ‚Äú–≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏‚Äù –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞–º–∏ —Å–∏—Å—Ç–µ–º–Ω–æ –ø—Ä–æ—Å–µ–¥–∞—é—Ç –¥–ª—è POS –∏ –±—ã–≤–∞—é—Ç –≤—ã—Å–æ–∫–∏–º–∏ –¥–ª—è –∫–∞–∫–∏—Ö‚Äë—Ç–æ NEG ‚Üí pos‚âà–Ω–∏–∑–∫–∏–π, neg‚âà–≤—ã—Å–æ–∫–∏–π.

NEG –∞–≥—Ä–µ–≥–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ max.
–í scoring.py –º–µ—Ç–æ–¥ _aggregate_negative –¥–æ —Å–∏—Ö –ø–æ—Ä:

neg_sim = np.max(sims_neg, axis=1)
neg01 = np.clip((neg_sim + 1.0) * 0.5, 0.0, 1.0)


–ü—Ä–∏ –¥–µ—Å—è—Ç–∫–∞—Ö –Ω–µ–≥–∞—Ç–∏–≤–æ–≤ ¬´–¥–∞–∂–µ –º–∞–ª–µ–π—à–∞—è —Å—Ö–æ–∂–µ—Å—Ç—å¬ª –¥–∞—ë—Ç –≤—ã—Å–æ–∫–∏–π –º–∞–∫—Å–∏–º—É–º ‚Üí neg —É–ª–µ—Ç–∞–µ—Ç. –≠—Ç–æ —Ä–æ–≤–Ω–æ —Ç–æ, —á—Ç–æ —Ç—ã –Ω–∞–±–ª—é–¥–∞–µ—à—å: negative 0.757 on negative idx=0, –∞ neg_avg‚âà0.879 (—á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ—Å–∏–Ω—É—Å—É ‚âà0.758).

–í –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –±–∞–Ω–∫ –º–æ–≥—É—Ç –ø–æ–ø–∞–¥–∞—Ç—å ¬´–ø–æ—á—Ç–∏ –ø–æ–∑–∏—Ç–∏–≤—ã¬ª.
–ü–∞–ø–∫–∞ —Å –Ω–µ–≥–∞—Ç–∏–≤–∞–º–∏ —á–∞—Å—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –∫–ª–∞—Å—Å detail. –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –ø–æ—Ö–æ–∂–µ—Å—Ç–∏ —Ç–∞–∫–∏–µ –æ–±—Ä–∞–∑—ã –≤—Å–µ–≥–¥–∞ ¬´–¥–∞–≤—è—Ç¬ª neg –≤–≤–µ—Ä—Ö.

–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ—Ñ–∏–∫—Å–∏—Ç—å (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ, –Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –ø—Ä–∞–≤–∫–∏)

–ù–∏–∂–µ ‚Äî —Ç–æ—á–µ—á–Ω—ã–µ –ø–∞—Ç—á–∏ –≤ —Ç–≤–æ–∏—Ö —Ñ–∞–π–ª–∞—Ö (—Å—Ç—Ä–æ–∫–∏ —É–∫–∞–∑–∞–ª –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ, —Å–º–æ—Ç—Ä–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É).

‚úÖ –ü–ê–¢–ß 1. DINOv3: –ø—Ä–∏–≤–µ—Å—Ç–∏ POS/NEG –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã –≤ —Ç–æ –∂–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, —á—Ç–æ –∏ –º–∞—Å–∫–∏

–§–∞–π–ª: /mnt/data/embeddings.py
–§—É–Ω–∫—Ü–∏—è: def _get_dinov3_global(self, image_np): (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ ~866 —Å—Ç—Ä–æ–∫–µ)

–ó–ê–ú–ï–ù–ò –ù–ê:

def _get_dinov3_global(self, image_np):
    import torch
    from PIL import Image as PILImage
    self._ensure_dinov3_convnext()
    x = self._dinov3_preprocess(PILImage.fromarray(image_np)).unsqueeze(0).to(self._dinov3_device)
    with torch.no_grad():
        feats = self._dinov3_model.forward_features(x)
        if isinstance(feats, dict):
            feats = feats.get('x', None) or feats.get('features', None)
        if feats.ndim == 3:
            feats = feats.unsqueeze(0)
        assert feats.ndim == 4, "–û–∂–∏–¥–∞–ª–∏ [B,C,Hf,Wf] –æ—Ç forward_features"
        fmap = feats[0].detach().cpu().float().numpy().transpose(1, 2, 0)  # (Hf, Wf, C)
        v = fmap.reshape(-1, fmap.shape[-1]).mean(axis=0).astype(np.float32)  # spatial mean
    v /= (np.linalg.norm(v) + 1e-8)
    if v.shape[0] != 1024:
        out = np.zeros(1024, dtype=np.float32)
        out[:min(1024, v.shape[0])] = v[:min(1024, v.shape[0])]
        v = out
    return v.astype(np.float32)


–ó–∞—á–µ–º: —Ç–µ–ø–µ—Ä—å –∏ –º–∞—Å–∫–∏, –∏ POS/NEG –±–µ—Ä—É—Ç—Å—è –∏–∑ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Å–ª–æ—è (feature map ConvNeXt‚ÄëB). –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç —Ç—É–ø–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ—Å–∏–Ω—É—Å—ã —Å –ø–æ–∑–∏—Ç–∏–≤–∞–º–∏ (–∫–∞–∫ —Ç–≤–æ–π pos=0.311 ‚Üí cos‚âà‚àí0.378) –∏ —Å–Ω–∏–∑–∏—Ç ¬´–ª–∂–∏–≤—É—é¬ª –ø–æ—Ö–æ–∂–µ—Å—Ç—å –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤—ã.

‚úÖ –ü–ê–¢–ß 2. –°–¥–µ–ª–∞—Ç—å NEG —Ä–æ–±–∞—Å—Ç–Ω—ã–º (–∫–≤–∞–Ω—Ç–∏–ª—å –≤–º–µ—Å—Ç–æ max)

–§–∞–π–ª: /mnt/data/scoring.py
–ú–µ—Ç–æ–¥: ScoreCalculator._aggregate_negative

–ó–ê–ú–ï–ù–ò –¢–ï–õ–û –§–£–ù–ö–¶–ò–ò –ù–ê:

def _aggregate_negative(self, sims_neg: np.ndarray) -> np.ndarray:
    if sims_neg.size == 0 or sims_neg.shape[1] == 0:
        return np.zeros((sims_neg.shape[0] if sims_neg.ndim > 0 else 0,), dtype=np.float32)
    q = getattr(self, 'neg_quantile', 0.95)  # –º–æ–∂–Ω–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å self.neg_quantile –≤ –∫–æ–Ω—Ñ–∏–≥–µ
    neg_cos = np.quantile(sims_neg, q, axis=1).astype(np.float32)  # ¬´–ø–æ—á—Ç–∏ —Ö—É–¥—à–∏–π¬ª, –Ω–æ –Ω–µ max
    neg01 = np.clip((neg_cos + 1.0) * 0.5, 0.0, 1.0)
    return neg01


–ï—Å–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–æ–≤ –º–Ω–æ–≥–æ –∏ –æ–Ω–∏ ¬´–∑–ª—ã–µ¬ª, –Ω–∞—á–Ω–∏ —Å q=0.90.

‚úÖ –ü–ê–¢–ß 3. –°–¥–µ–ª–∞—Ç—å POS –º–µ–Ω–µ–µ ¬´–º–∞–∫—Å–∏–º—É–º‚Äë–∑–∞–≤–∏—Å–∏–º—ã–º¬ª

–§–∞–π–ª: /mnt/data/scoring.py
–ú–µ—Ç–æ–¥: ScoreCalculator._aggregate_positive

–ó–ê–ú–ï–ù–ò –¢–ï–õ–û –§–£–ù–ö–¶–ò–ò –ù–ê:

def _aggregate_positive(self, sims_pos: np.ndarray) -> np.ndarray:
    if sims_pos.size == 0 or sims_pos.shape[1] == 0:
        return np.zeros((sims_pos.shape[0] if sims_pos.ndim > 0 else 0,), dtype=np.float32)

    K = sims_pos.shape[1]
    k = max(1, min(getattr(self, 'topk', 5), K))
    topk = np.partition(sims_pos, -k, axis=1)[:, -k:]
    # –ª—ë–≥–∫–∞—è –æ–±—Ä–µ–∑–∫–∞ –∫—Ä–∞—ë–≤ (20%), —á—Ç–æ–±—ã –≤—ã–±—Ä–æ—Å—ã –Ω–µ ¬´—Ç—è–Ω—É–ª–∏¬ª –Ω–∞–≤–µ—Ä—Ö
    t = int(round(k * 0.2))
    if t > 0 and (k - 2 * t) > 0:
        topk = np.sort(topk, axis=1)[:, t:-t]

    pos_cos = topk.mean(axis=1).astype(np.float32)
    pos01 = np.clip((pos_cos + 1.0) * 0.5, 0.0, 1.0)
    return pos01

‚úÖ –ü–ê–¢–ß 4. –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å ¬´–ø—Å–µ–≤–¥–æ‚Äë–Ω–µ–≥–∞—Ç–∏–≤—ã¬ª, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤—ã (–¥–æ —Å–∫–æ—Ä–∏–Ω–≥–∞)

–§–∞–π–ª: /mnt/data/embeddings.py
–§—É–Ω–∫—Ü–∏—è: build_queries_multiclass (–≤–µ—Ç–∫–∞ if str(self.backbone).startswith('dinov3'):)

–°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏ class_pos –∏ q_neg –≤—Å—Ç–∞–≤—å —Ñ–∏–ª—å—Ç—Ä:

# --- –§–∏–ª—å—Ç—Ä –Ω–µ–≥–∞—Ç–∏–≤–æ–≤, –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤—ã ---
pos_stack = []
for cls, Q in (class_pos or {}).items():
    if Q is not None and Q.size:
        pos_stack.append(Q.astype(np.float32))
if len(pos_stack):
    P = np.vstack(pos_stack)
    # –æ–±–∞ —É–∂–µ L2-–Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã –≤—ã—à–µ; –ø—Ä–æ–≤–µ—Ä–∏–º –µ—â—ë —Ä–∞–∑ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    P /= (np.linalg.norm(P, axis=1, keepdims=True) + 1e-8)
    if q_neg.shape[0] > 0:
        qn = q_neg.astype(np.float32)
        qn /= (np.linalg.norm(qn, axis=1, keepdims=True) + 1e-8)
        sims_np = qn @ P.T
        thr = float(os.getenv('SEARCHDET_NEG_FILTER_THR', '0.60'))  # –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ 0.55..0.65
        keep = (np.max(sims_np, axis=1) <= thr)
        dropped = int((~keep).sum())
        if dropped:
            print(f"   üßπ –£–±—Ä–∞–Ω–æ {dropped} –Ω–µ–≥–∞—Ç–∏–≤–æ–≤ (—Å–ª–∏—à–∫–æ–º –ø–æ—Ö–æ–∂–∏ –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤—ã; thr={thr:.2f})")
        q_neg = q_neg[keep]


–ó–∞—á–µ–º: –µ—Å–ª–∏ –≤ –±–∞–Ω–∫ NEG –ø–æ–ø–∞–¥–∞–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∞, –ø–æ —Å—É—Ç–∏ —è–≤–ª—è—é—â–∞—è—Å—è ¬´–ø–æ–∑–∏—Ç–∏–≤–æ–º¬ª –¥–ª—è –∫–ª–∞—Å—Å–∞ detail, –æ–Ω–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –≤–∞–ª–∏—Ç—å —Ç–µ–±–µ neg –≤ –ø–æ—Ç–æ–ª–æ–∫.

–ü–æ—á–µ–º—É —Ç–≤–æ—ë —Ç–µ–∫—É—â–µ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–æ–µ

¬´‚Ä¶–º–∞—Å–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö, –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–µ 0.757‚Ä¶ pos=0.311, neg=0.879‚Ä¶¬ª

pos=0.311 ‚Üí –∫–æ—Å–∏–Ω—É—Å —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–º ‚âà ‚àí0.378. –≠—Ç–æ –ø–æ—á—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –∏–∑‚Äë–∑–∞ —Ä–∞—Å—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å–ª–æ—ë–≤ (–º–∞—Å–∫–∞ ‚Äî forward_features, –ø—Ä–æ—Ç–æ—Ç–∏–ø ‚Äî pooled head).

neg=0.879 ‚Üí –∫–æ—Å–∏–Ω—É—Å —Å ¬´—Ö—É–¥—à–∏–º¬ª –Ω–µ–≥–∞—Ç–∏–≤–æ–º ‚âà 0.758. –≠—Ç–æ —Ç–∏–ø–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç max –ø–æ –Ω–µ–≥–∞—Ç–∏–≤–∞–º –∏/–∏–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ neg ¬´–ø–æ—á—Ç–∏‚Äë–ø–æ–∑–∏—Ç–∏–≤–æ–≤¬ª.

–°–¥–µ–ª–∞–≤ –ü–∞—Ç—á 1 (–æ–¥–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤) + –ü–∞—Ç—á 2 (–∫–≤–∞–Ω—Ç–∏–ª—å), —Ç—ã —É–∂–µ –Ω–µ —É–≤–∏–¥–∏—à—å —Å–∏—Ç—É–∞—Ü–∏–∏ ¬´pos‚âà0.3 –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ neg‚âà0.88¬ª –Ω–∞ —Ç–æ–π –∂–µ –º–∞—Å–∫–µ. –ü–∞—Ç—á 4 –ø—Ä–∏–∫—Ä—ã–≤–∞–µ—Ç –∫–µ–π—Å, –∫–æ–≥–¥–∞ –≤ –ø–∞–ø–∫–µ NEG –ª–µ–∂–∞—Ç –ø—Ä–∏–º–µ—Ä—ã, —Å–∏–ª—å–Ω–æ –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ POS –ø–æ —Å–∞–º–æ–º—É –∫–ª–∞—Å—Å—É.

–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–∞—Ç—á–µ–π

–ó–∞–ø—É—Å—Ç–∏ —Ç–æ—Ç –∂–µ –ø—Ä–∏–º–µ—Ä. –í –ª–æ–≥–∞—Ö –ø–µ—Ä–µ–¥ —Å–∫–æ—Ä–∏–Ω–≥–æ–º –¥–æ–±–∞–≤—å (–≤ score_multiclass, –ø–µ—Ä–µ–¥ —Ä–∞—Å—á—ë—Ç–æ–º neg_scores):

if 'sims_neg' in locals() and sims_neg.size:
    top_idx = np.argmax(sims_neg, axis=1)
    top_val = np.take_along_axis(sims_neg, top_idx[:, None], axis=1).squeeze(1)
    print("   üîé MAX NEG cos –ø–æ –º–∞—Å–∫–∞–º:", np.round(top_val, 3))
    print("   üîé –ò–Ω–¥–µ–∫—Å—ã NEG:", top_idx.tolist())


–û–∂–∏–¥–∞–µ–º–æ max NEG cos –æ–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∞ 0.1‚Äì0.25.

–ü—Ä–æ–≤–µ—Ä—å –¥–ª—è ¬´—Ç–æ–π —Å–∞–º–æ–π¬ª –º–∞—Å–∫–∏:

pos –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã—à–µ (–æ–±—ã—á–Ω–æ >0.6 –ø–æ—Å–ª–µ (cos+1)/2)

neg ‚Äî –Ω–∏–∂–µ (–æ–±—ã—á–Ω–æ <0.6), –µ—Å–ª–∏ –≤ –Ω–µ–≥–∞—Ç–∏–≤–∞—Ö –Ω–µ—Ç –ª–æ–±–æ–≤—ã—Ö –¥—É–±–ª–µ–π.

–ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –ø–∏–∫–∏ –ø–æ –Ω–µ–≥–∞—Ç–∏–≤–∞—Ö ‚Äî –ø–æ–Ω–∏–∑—å –∫–≤–∞–Ω—Ç–∏–ª—å –¥–æ q=0.90 –∏/–∏–ª–∏ —É–∂–µ—Å—Ç–æ—á–∏ —Ñ–∏–ª—å—Ç—Ä SEARCHDET_NEG_FILTER_THR –¥–æ 0.55.

–í–∞–∂–Ω—ã–µ –º–µ–ª–æ—á–∏ (—á—Ç–æ–±—ã –Ω–µ –ø–æ–π–º–∞—Ç—å —Ä–µ–≥—Ä–µ—Å—Å–∏—é)

–û–¥–∏–Ω–∞–∫–æ–≤—ã–π –ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –º–∞—Å–æ–∫ –∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤ DINOv3 —É–∂–µ –æ–±–µ—Å–ø–µ—á–µ–Ω –≤ _ensure_dinov3_convnext() (Resize –¥–æ SEARCHDET_FEAT_SHORT_SIDE, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 224; Norm IMAGENET). –ù–µ –º–µ–Ω—è–π –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è POS/NEG.

–ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –º–∞—Å–æ–∫ –Ω–∞ —Ä–µ—à—ë—Ç–∫—É —Ñ–∏—á ‚Äî —Ç–æ–ª—å–∫–æ nearest (—É —Ç–µ–±—è –≤ DINOv3‚Äë–≤–µ—Ç–∫–µ —Ç–∞–∫ –∏ –µ—Å—Ç—å). –õ—é–±–∞—è bilinear ¬´—Ä–∞–∑–º–æ–µ—Ç¬ª ROI –∏ –∑–∞–≤—ã—Å–∏—Ç neg.

–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –≤—Å–µ –≤–µ–∫—Ç–æ—Ä–∞ (–º–∞—Å–∫–∏, POS, NEG) L2‚Äë–Ω–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –∫–æ—Å–∏–Ω—É—Å–æ–º (–≤–µ–∑–¥–µ –≤ —Ç–≤–æ—ë–º –∫–æ–¥–µ —ç—Ç–æ —É–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è ‚Äî –æ—Å—Ç–∞–≤—å).

–†–µ–∑—é–º–µ

–°–µ–π—á–∞—Å POS –∏ NEG —É DINOv3 —Å—á–∏—Ç–∞–ª–∏—Å—å –≤ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞—Ö, –∞ NEG –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–ª—Å—è —á–µ—Ä–µ–∑ max ‚Üí –∏–∑‚Äë–∑–∞ –ª—é–±–æ–π –º–∞–ª–æ–π —Å—Ö–æ–∂–µ—Å—Ç–∏ NEG —É–ª–µ—Ç–∞–ª, –∞ POS –ø–∞–¥–∞–ª, –¥–∞–∂–µ –Ω–∞ ¬´—Å–≤–æ–µ–π¬ª –º–∞—Å–∫–µ.

–ü—Ä–∏–≤–µ–¥–∏ –≤—Å—ë –≤ –æ–¥–Ω–æ feature‚Äë–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (forward_features + spatial mean), –∑–∞–º–µ–Ω–∏ NEG‚Äë–∞–≥—Ä–µ–≥–∞—Ü–∏—é –Ω–∞ –∫–≤–∞–Ω—Ç–∏–ª—å, —Å–¥–µ–ª–∞–π POS trimmed top‚Äëk mean, –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –ø—Å–µ–≤–¥–æ‚Äë–Ω–µ–≥–∞—Ç–∏–≤—ã.

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–∞—Å–∫–∞ –∏–∑ –ø–æ–∑–∏—Ç–∏–≤–æ–≤ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ ¬´–Ω–µ–≥–∞—Ç–∏–≤¬ª; pos —Å—Ç–∞–Ω–µ—Ç –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º, neg ‚Äî —É—Å—Ç–æ–π—á–∏–≤—ã–º.
